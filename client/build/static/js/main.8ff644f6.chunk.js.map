{"version":3,"sources":["pages/Home.js","utils/queries.js","utils/helpers.js","utils/actions.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","assets/spinner.gif","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","utils/reducers.js","utils/GlobalState.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_USER","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","CLEAR_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","CartItem","item","dispatch","useDispatch","src","image","alt","name","price","type","placeholder","value","purchaseQuantity","onChange","target","parseInt","role","onClick","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","state","useSelector","useLazyQuery","getCheckout","data","toggleCart","useEffect","then","res","redirectToCheckout","sessionId","checkout","session","cart","products","length","getCart","cartOpen","map","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Detail","id","useParams","useState","currentProduct","setCurrentProduct","useQuery","loading","find","product","indexedProducts","to","description","itemInCart","cartItem","disabled","p","spinner","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","initialstate","categories","currentCategory","reducer","action","newState","filter","createStore","createHttpLink","uri","setContext","_","headers","authorization","App","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8ff644f6.chunk.js","sourcesContent":["import React from \"react\";\n// import ProductList from \"../components/ProductList\";\n// import CategoryMenu from \"../components/CategoryMenu\";\n// import Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      {/* <CategoryMenu /> */}\n      {/* <ProductList /> */}\n      {/* <Cart /> */}\n    </div>\n  );\n};\n\nexport default Home;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React from 'react';\n// import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  // const state = useSelector(state =>state);\n  const dispatch=useDispatch();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  \n  const state = useSelector(state =>state);\n  const dispatch=useDispatch();\n\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport Cart from '../components/Cart';\n\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const state = useSelector(state =>state);\n  const dispatch=useDispatch();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import { useReducer } from 'react';\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\nconst initialstate={\n  products: [],\n  cart: [],\n  cartOpen: false,\n  categories: [],\n  currentCategory: '',\n}\n\nexport function reducer (state=initialstate, action)  {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    default:\n      return state;\n  }\n};\n\n// export function useProductReducer(initialState) {\n//   return useReducer(reducer, initialState);\n// }\nexport default reducer;","// import { useProductReducer } from './reducers'\nimport { reducer } from './reducers'\nimport { createStore } from 'redux';\n\n\nexport default createStore(reducer);\n\n","import React from 'react';\n\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  // ApolloClient,\n  InMemoryCache,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport { Provider } from 'react-redux';\nimport store from './utils/GlobalState';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\n// const client = new ApolloClient({\n//   link: authLink.concat(httpLink),\n//   cache: new InMemoryCache(),\n// });\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n            <Nav />\n          <Routes> \n               <Route \n                path=\"/\" \n                element={<Home />} \n              />\n               <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              /> \n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              /> \n            </Routes>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}